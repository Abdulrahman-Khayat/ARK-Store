{"version":3,"sources":["logo.svg","apis/projects.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","App","useState","projectInfo","setProjectInfo","fetchProjects","a","projects","get","response","data","useEffect","className","map","project","name","description","image","github","demo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAAe,I,aCGAA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAQ,8BCqDGC,EAjDH,WAAO,IAAD,EACqBC,mBAAS,IAD9B,mBACTC,EADS,KACGC,EADH,KAGVC,EAAa,uCAAI,4BAAAC,EAAA,sEACIC,EAASC,IAAI,cADjB,OACbC,EADa,OAEnBL,EAAeK,EAASC,MAFL,2CAAJ,qDAqCnB,OAJAC,qBAAU,WACNN,MACF,IAGE,qCACI,qBAAKO,UAAU,8BAAf,SACI,4CAjCJ,qBAAKA,UAAU,kCAAf,SACKT,EAAYU,KAAI,SAAAC,GAEb,OAAIA,EAMI,wCACUA,EAAQC,KADlB,iBAEmBD,EAAQE,YAF3B,SAGWF,EAAQG,MAHnB,UAIYH,EAAQI,OAJpB,QAKUJ,EAAQK,KALlB,OAMSL,EAAQC,QAXd,qDCVdK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4388e32d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios'\r\n\r\n\r\nexport default axios.create({\r\n    baseURL:'http://localhost:8000/api'\r\n})","import logo from './logo.svg';\nimport './App.css';\nimport projects from './apis/projects'\nimport React, {useState,useEffect} from 'react'\n\n\n\n\nconst App = () => {\n  const [projectInfo,setProjectInfo] = useState([]);\n\n  const fetchProjects  = async () =>{\n      const response = await projects.get('/projects/')\n      setProjectInfo(response.data)\n  }\n\n  const createProjectCards = () => {\n      return(\n          <div className=\"ui three stackable raised cards\">\n              {projectInfo.map(project => {\n\n                  if(!project){\n                      return <div>Loading..</div>\n\n                  } else {\n\n                      return (\n                          <div> \n                              name={project.name}\n                              description = {project.description}\n                              image={project.image}\n                              github={project.github}\n                              demo={project.demo}\n                              key={project.name}\n\n                              </div>\n                          \n                      )    \n                  }\n          })}\n          </div>   \n      )\n  }\n\n  useEffect(()=>{\n      fetchProjects()\n  },[])\n\n  return (\n      <>\n          <div className=\"ui center aligned container\">\n              <h1>Projects</h1>\n          </div>\n          {createProjectCards()}\n      </>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}